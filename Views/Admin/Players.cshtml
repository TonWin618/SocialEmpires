@using Microsoft.AspNetCore.Authorization
@using SocialEmpires.Services
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Text
@using SocialEmpires.Utils
@attribute [Authorize(Roles = "Admin")]
@inject PlayerSaveService playerSaveService
@inject ConfigFileService configFileService
@inject IViewLocalizer localizer
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = localizer["PlayerSave"];
    var pageIndex = ViewData["PageIndex"] as int? ?? 0;
    var pageSize = ViewData["PageSize"] as int? ?? 0;
    var (pageCount, playerSaves) = await playerSaveService.GetAllPlayerSavesAsync(pageIndex,pageSize);
}

<div>
    <table style="width:100%;" class="table table-striped">
        <thead>
            <tr>
                <th>Player</th>
                <th>@localizer["Id"]</th>
                <th>@localizer["Resources"]</th>
                <th>@localizer["Tutorial"]</th>
                <th>@localizer["Map Size"]</th>
                <th>@localizer["Last Login"]</th>
                <th>@localizer["Items"]</th>
                <th>@localizer["Operation"]</th>
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var save in playerSaves)
                {
                    <tr>
                        <td>[@save.DefaultMap.Level] @save.PlayerInfo.MapNames.First()</td>
                        <td><p style="font-size:12px;">@save.Pid</p></td>
                        <td>c:@save.PlayerInfo.Cash g:@save.DefaultMap.Coins s:@save.DefaultMap.Stone w:@save.DefaultMap.Wood f:@save.DefaultMap.Food</td>
                        <td>@(save.PlayerInfo.CompletedTutorial == 1 ? localizer["Completed"] : "---")</td>
                        <td>@save.DefaultMap.Expansions.Count()</td>
                        <td>@DateTimeOffset.FromUnixTimeSeconds(save.PlayerInfo.LastLoggedIn).ToString("g")</td>
                        <td>@{
                                var sb = new StringBuilder();
                                var itemGroups = save.DefaultMap.Items.GroupBy(_ => _.Id);
                                foreach(var group in itemGroups)
                                {
                                    var id = group.Key;
                                    if ((id > 500 && id < 900) || (id > 2000 && id < 3000))
                                    {
                                        var item = configFileService.GetItem(id.ToString());
                                        if(item == null)
                                        {
                                            continue;
                                        }
                                        sb.Append($"{item.Name}*{group.Count()}, ");
                                    }
                                }
                                @sb.ToString();
                            }
                        </td>
                        <td>
                            <button>Item</button>
                            <button>Map</button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <nav>
        <ul class="pagination justify-content-center">
            <li class="page-item @(pageIndex <= 1?"disabled":"")">
                <a class="page-link" href="?pageIndex=@(pageIndex - 1)&pageSize=@pageSize" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @{
                var indexes = PageIndexesHelper.CalculatePageIndexes(pageIndex, pageCount, 11);
                foreach (var index in indexes)
                {
                    <li class="page-item">
                        <a class="page-link" href="?pageIndex=@(index)&pageSize=@pageSize">@(index)</a>
                    </li>
                }
            }
            <li class="page-item @(pageIndex >= pageCount?"disabled":"")">
                <a class="page-link" href="?pageIndex=@(pageIndex + 1)&pageSize=@pageSize" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>

<script>
</script>